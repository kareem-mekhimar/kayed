{"version":3,"sources":["../../src/controllers/auction-notification.controller.js"],"names":["findAll","req","res","next","id","params","findById","user","NotFound","query","page","limit","parseInt","find","populate","sort","creationDate","skip","notifications","count","pageCount","Math","ceil","response","addSelfLink","addPrevLink","addNextLink","send","findUnseen","seen","reset","update","multi","status","end"],"mappings":"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","file":"auction-notification.controller.js","sourcesContent":["import mongoose from \"mongoose\";\nimport User from \"../models/user.model\" ;\nimport AuctionNotifcation from \"../models/auction-notification.model\";\nimport ApiResponse from \"../helpers/ApiResponse\";\nimport ApiError from \"../helpers/ApiError\";\n\n\n\nexport default {\n    async findAll(req, res, next) {\n        let { id } = req.params;\n\n        const user = await User.findById(id);\n        if (!user)\n            return next(new ApiError.NotFound('User'));\n        \n         let { page, limit } = req.query;\n\n        page = page ? parseInt(page) : 1;\n        limit = limit ? parseInt(limit) : 20;\n\n        try {\n            let notifications = await AuctionNotifcation.find({ user: req.user.id }).populate(\"bidder relatedAuction\")\n                .sort({ creationDate: -1 })\n                .limit(limit)\n                .skip((page - 1) * limit);\n\n            const count = await AuctionNotifcation.count({ user: req.user.id });\n\n            const pageCount = Math.ceil(count / limit);\n            let response = new ApiResponse(notifications, page, pageCount, limit, count);\n            response.addSelfLink(req);\n\n            if (page > 1) {\n                response.addPrevLink(req);\n            }\n            if (page < pageCount) {\n                response.addNextLink(req);\n            }\n            res.send(response);\n\n        } catch (err) {\n            next(err);\n        }\n    },\n    async findUnseen(req, res, next) {\n\n        let { id } = req.params;\n        const user = await User.findById(id);\n        if (!user)\n            return next(new ApiError.NotFound('User'));\n            \n            \n        let notifications = await AuctionNotifcation.find({ user: req.user.id,seen:false }).populate(\"bidder relatedAuction\")\n            .sort({ creationDate: -1 })\n            .limit(10);\n\n        res.send(notifications) ;    \n    },\n    async reset(req, res, next) {\n       \n        let { id } = req.params;\n        const user = await User.findById(id);\n        if (!user)\n            return next(new ApiError.NotFound('User'));\n            \n            \n        await AuctionNotifcation.update({user: req.user.id,seen:false},{ seen:true }, { multi:true }) ;\n\n        res.status(204).end() ;\n    }\n}\n\n"]}