{"version":3,"sources":["../../src/controllers/auction-notification.controller.js"],"names":["findAll","req","res","next","params","id","query","page","limit","parseInt","find","user","populate","sort","creationDate","skip","notifications","count","pageCount","Math","ceil","response","send","findUnseen","seen","reset","update","multi","status","end"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAEe;AACLA,WADK,mBACGC,GADH,EACQC,GADR,EACaC,IADb,EACmB;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEpB,kCAAeF,IAAIG,MAAJ,CAAWC,EAA1B,EAA8BF,IAA9B,CAFoB;;AAAA;AAAA,yCAIJF,IAAIK,KAJA,EAIpBC,IAJoB,cAIpBA,IAJoB,EAIdC,KAJc,cAIdA,KAJc;;;AAM1BD,mCAAOA,OAAOE,SAASF,IAAT,CAAP,GAAwB,CAA/B;AACAC,oCAAQA,QAAQC,SAASD,KAAT,CAAR,GAA0B,EAAlC;;AAP0B;AAAA;AAAA,mCAUI,8BAAmBE,IAAnB,CAAwB,EAAEC,MAAMV,IAAIU,IAAJ,CAASN,EAAjB,EAAxB,EAA+CO,QAA/C,CAAwD,uBAAxD,EACrBC,IADqB,CAChB,EAAEC,cAAc,CAAC,CAAjB,EADgB,EAErBN,KAFqB,CAEfA,KAFe,EAGrBO,IAHqB,CAGhB,CAACR,OAAO,CAAR,IAAaC,KAHG,CAVJ;;AAAA;AAUlBQ,yCAVkB;AAAA;AAAA,mCAeF,8BAAmBC,KAAnB,CAAyB,EAAEN,MAAMV,IAAIU,IAAJ,CAASN,EAAjB,EAAzB,CAfE;;AAAA;AAehBY,iCAfgB;AAiBhBC,qCAjBgB,GAiBJC,KAAKC,IAAL,CAAUH,QAAQT,KAAlB,CAjBI;AAkBlBa,oCAlBkB,GAkBP,0BAAiBL,aAAjB,EAAgCT,IAAhC,EAAsCW,SAAtC,EAAiDV,KAAjD,EAAwDS,KAAxD,EAA+DhB,GAA/D,CAlBO;;;AAoBtBC,gCAAIoB,IAAJ,CAASD,QAAT;;AApBsB;AAAA;;AAAA;AAAA;AAAA;;AAuBtBlB;;AAvBsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyB7B,KA1BU;AA6BLoB,cA7BK,sBA6BMtB,GA7BN,EA6BWC,GA7BX,EA6BgBC,IA7BhB,EA6BsB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACvB,kCAAeF,IAAIG,MAAJ,CAAWC,EAA1B,EAA8BF,IAA9B,CADuB;;AAAA;AAAA;AAAA,mCAGH,8BAAmBO,IAAnB,CAAwB,EAAEC,MAAMV,IAAIU,IAAJ,CAASN,EAAjB,EAAqBmB,MAAM,KAA3B,EAAxB,EAA4DZ,QAA5D,CAAqE,uBAArE,EACrBC,IADqB,CAChB,EAAEC,cAAc,CAAC,CAAjB,EADgB,EAErBN,KAFqB,CAEf,EAFe,CAHG;;AAAA;AAGzBQ,yCAHyB;;;AAO7Bd,gCAAIoB,IAAJ,CAASN,aAAT;;AAP6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQhC,KArCU;AAwCLS,SAxCK,iBAwCCxB,GAxCD,EAwCMC,GAxCN,EAwCWC,IAxCX,EAwCiB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAClB,kCAAeF,IAAIG,MAAJ,CAAWC,EAA1B,EAA8BF,IAA9B,CADkB;;AAAA;AAAA;AAAA,mCAGlB,8BAAmBuB,MAAnB,CAA0B,EAAEf,MAAMV,IAAIU,IAAJ,CAASN,EAAjB,EAAqBmB,MAAM,KAA3B,EAA1B,EAA8D,EAAEA,MAAM,IAAR,EAA9D,EAA8E,EAAEG,OAAO,IAAT,EAA9E,CAHkB;;AAAA;;AAKxBzB,gCAAI0B,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;;AALwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAM3B;AA9CU,C","file":"auction-notification.controller.js","sourcesContent":["import mongoose from \"mongoose\";\nimport User from \"../models/user.model\";\nimport AuctionNotifcation from \"../models/auction-notification.model\";\nimport ApiResponse2 from \"../helpers/ApiResponse\";\nimport ApiError from \"../helpers/ApiError\";\nimport { checkUserExist } from '../helpers/CheckMethods';\n\nexport default {\n    async findAll(req, res, next) {\n\n        await checkUserExist(req.params.id, next);\n        \n        let { page, limit } = req.query;\n\n        page = page ? parseInt(page) : 1;\n        limit = limit ? parseInt(limit) : 20;\n\n        try {\n            let notifications = await AuctionNotifcation.find({ user: req.user.id }).populate(\"bidder relatedAuction\")\n                .sort({ creationDate: -1 })\n                .limit(limit)\n                .skip((page - 1) * limit);\n\n            const count = await AuctionNotifcation.count({ user: req.user.id });\n\n            const pageCount = Math.ceil(count / limit);\n            let response = new ApiResponse2(notifications, page, pageCount, limit, count, req);\n\n            res.send(response);\n\n        } catch (err) {\n            next(err);\n        }\n    },\n\n\n    async findUnseen(req, res, next) {\n        await checkUserExist(req.params.id, next);\n\n        let notifications = await AuctionNotifcation.find({ user: req.user.id, seen: false }).populate(\"bidder relatedAuction\")\n            .sort({ creationDate: -1 })\n            .limit(10);\n\n        res.send(notifications);\n    },\n\n\n    async reset(req, res, next) {\n        await checkUserExist(req.params.id, next);\n\n        await AuctionNotifcation.update({ user: req.user.id, seen: false }, { seen: true }, { multi: true });\n\n        res.status(204).end();\n    }\n}\n\n"]}