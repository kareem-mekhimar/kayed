{"version":3,"sources":["../../src/routes/barter.route.js"],"names":["router","Router","route","get","findAll","post","createBarter","findById","put","updateBarter","delete","deleteBarter","use"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DAD,OAAOE,KAAP,CAAa,GAAb,EACKC,GADL,CACS,iBAAiBC,OAD1B,EAEKC,IAFL,CAEU,iBAAiBC,YAF3B;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;;;;;;;;;;;;;;;;;;;;AAoBAN,OAAOE,KAAP,CAAa,MAAb,EACKC,GADL,CACS,iBAAiBI,QAD1B,EAEKC,GAFL,CAES,iBAAiBC,YAF1B,EAGKC,MAHL,CAGY,iBAAiBC,YAH7B;;AAMAX,OAAOY,GAAP;;kBAEeZ,M","file":"barter.route.js","sourcesContent":["import express from \"express\";\nimport BarterController from \"../controllers/barter.controller\";\nimport barterOfferRoute from \"./barter-offer.route\" ;\n\nconst router = express.Router();\n\n/**\n* @swagger\n* definitions:\n*   Barter:\n*     type: \"object\"\n*     required:\n*     - \"title\"\n*     - \"description\"\n*     - \"neededProduct\"\n*     - \"relatedUser\"\n*     - \"relatedCategory\"\n*     properties:\n*       id:\n*         type: string\n*         readOnly: true\n*       title:\n*         type: string\n*       description:\n*         type: string\n*       neededProduct:\n*         type: string\n*       relatedUser:\n*         type: string\n*       relatedCategory:\n*         type: string\n*       type:\n*         type: string\n*         enum:\n*         - \"TEMP\"\n*         - \"PERM\"\n*       imgs:\n*         type: array\n*         items:\n*           type: string\n*           format: \"base64\"\n*       finished:\n*         type: boolean\n*         default: false\n*         readOnly: true\n*       barterOffer:\n*         type: string\n*         readOnly: true\n*       creationDate:\n*         type: string\n*         format: date-time\n*         readOnly: true\n*     \n*/\n\n/**\n * @swagger\n * /barters:\n *   get:\n *     tags:\n *       - Barters\n *     summary: Get all barters\n *     produces:\n *       - application/json\n *     parameters:\n *       - name: \"page\"\n *         in: \"query\"\n *         type: number\n *         default: 1\n *       - name: \"limit\"\n *         in: \"query\"\n *         type: number\n *         default: 20\n *       - name: \"category\"\n *         in: \"query\"\n *         type: id\n *       - name: \"type\"\n *         in: \"query\"\n *         type: string\n *         description: TEMP - PERM\n *       - name: \"finished\"\n *         in: \"query\"\n *         type: string\n *         description: true - false\n *     responses:\n *       200:\n *         description: Get An Array of Barters\n *         example: \n *                   {\n *                       \"links\": {\n *                           \"self\": \"http://localhost:3000/api/v1/barters?page=1&limit=20\"\n *                       },\n *                       \"data\": [\n *                           {\n *                              \"title\": \"Samsung\",\n *                              \"description\": \"Ay haga2\",\n *                              \"neededProduct\": \"IPHone2\",\n *                              \"relatedUser\": \"5a1db2b8a3c9862828910bef\",\n *                              \"relatedCategory\": \"5a1d59d25be03c12907a6771\",\n *                              \"creationDate\": \"2017-11-29T17:06:59.354Z\",\n *                              \"finished\": false,\n *                              \"imgs\": [],\n *                              \"type\": \"TEMP\",\n *                              \"id\": \"5a1ee933d75f0e2338e6222c\"\n *                           },\n *                           {\n *                               \"title\": \"BMW\",\n *                               \"description\": \"Ay haga2\",\n *                               \"neededProduct\": \"IPHone2\",\n *                               \"relatedUser\": \"5a1db2b8a3c9862828910bef\",\n *                               \"relatedCategory\": \"5a1d59d25be03c12907a6771\",\n *                               \"creationDate\": \"2017-11-29T17:05:51.703Z\",\n *                               \"finished\": false,\n *                               \"imgs\": [],\n *                               \"type\": \"TEMP\",\n *                               \"id\": \"5a1ee8efc25fa638dc9fdef2\"\n *                           }\n *                       ],\n *                       \"page\": 1,\n *                       \"pageCount\": 1,\n *                       \"limit\": 20,\n *                       \"totalCount\": 4\n *                   }\n */\n\n/**\n * @swagger\n * /barters:\n *   post:\n *     tags:\n *       - Barters\n *     summary: Add a new barter\n *     produces:\n *       - application/json\n *     parameters:\n *       - name: body\n *         description: Barter Object\n *         in: body\n *         required: true\n *         schema:\n *           $ref: '#/definitions/Barter'   \n *     responses:\n *       201:\n *         description: Return Created Barter\n *         example:           \n *               {\n *                   \"title\": \"Samsung Note 8\",\n *                   \"description\": \"This is a description for new mobile phone of samsung\",\n *                   \"neededProduct\": \"Iphone x\",\n *                   \"relatedUser\": {\n *                       \"fullName\": \"magdy\",\n *                       \"email\": \"demo@demo.com\",\n *                       \"address\": \"82Fatma El zhraa\",\n *                       \"phone\": \"01157954393\",\n *                       \"country\": \"egypt\",\n *                       \"id\": \"5a1db2b8a3c9862828910bef\"\n *                   },\n *                   \"relatedCategory\": {\n *                       \"name\": \"mobiles\",\n *                       \"id\": \"5a1db3a29246d21c0c4056cf\"\n *                   },\n *                   \"creationDate\": \"2017-12-03T12:15:05.679Z\",\n *                   \"finished\": false,\n *                   \"imgs\": [],\n *                   \"type\": \"TEMP\",\n *                   \"id\": \"5a23eac99c10230a8c3e6cc5\"\n *               }\n *       422:\n *         description: |\n *              - titles is Required\n *              - description is Required\n *              - neededProduct is Required\n *              ----------------------------\n *              - relatedUser is Required \n *              - User doesn't exist\n *              ----------------------------\n *              - relatedCategory is Required \n *              - Category doesn't exist\n *              ----------------------------\n *              - Optional type: type of barter should be 'TEMP' OR 'PERM'\n *              - Optional finished: finished should be true or false\n *              - Optional imgs : Imgs should be an array of strings 'images 64base\n */\n\n\n\nrouter.route('/')\n    .get(BarterController.findAll)\n    .post(BarterController.createBarter)\n/**\n * @swagger\n * /barters/{id}:\n *   get:\n *     tags:\n *       - Barters\n *     summary: Get a sepcific barter\n *     produces:\n *       - application/json\n *     parameters:\n *       - name: id\n *         in: path\n *         required: true\n *         type: string\n *     responses:\n *       200:\n *         description: Get a barter\n *         example: \n *               {\n *              \"title\": \"Samsung Note 8\",\n *            \"description\": \"This is a description for new mobile phone of samsung\",\n *               \"neededProduct\": \"Iphone x\",\n *               \"relatedUser\": {\n *                   \"fullName\": \"magdy\",\n *                   \"email\": \"demo@demo.com\",\n *                   \"address\": \"ASasasas\",\n *                   \"phone\": \"01157954393\",\n *                   \"country\": \"egypt\",\n *                   \"id\": \"5a1db2b8a3c9862828910bef\"\n *               },\n *               \"relatedCategory\": {\n *                   \"name\": \"mobiles\",\n *                   \"id\": \"5a1db3a29246d21c0c4056cf\"\n *               },\n *               \"creationDate\": \"2017-11-30T11:49:25.392Z\",\n *               \"finished\": false,\n *               \"imgs\": [],\n *               \"type\": \"TEMP\",\n *               \"id\": \"5a1ff0456cd27932acaad627\"\n *               }\n *       404:\n *         description:  Barter Not Found\n*/\n\n/**\n * @swagger\n * /barters/{id}:\n *   put:\n *     tags:\n *       - Barters\n *     summary: Update an existing barter\n *     produces:\n *       - application/json\n *     parameters:\n *       - name: id\n *         in: path\n *         required: true\n *         type: string\n *       - name: body\n *         description: Barter Object\n *         in: body\n *         required: true\n *         schema:\n *           $ref: '#/definitions/Barter'   \n *     responses:\n *       201:\n *         description: Return Updated Barter\n *         example:           \n *                {\n *                 \"name\": \"test category2\",\n *                 \"id\": \"5a1dbdddc1e5142cb8cb78f6\"\n *                }\n *       404:\n *         description:  Barter Not Found\n *       422:\n *         description: |\n *              - titles is Required\n *              - description is Required\n *              - neededProduct is Required\n *              ----------------------------\n *              - relatedUser is Required \n *              - User doesn't exist\n *              ----------------------------\n *              - relatedCategory is Required \n *              - Category doesn't exist\n *              ----------------------------\n *              - Optional type: type of barter should be 'TEMP' OR 'PERM'\n *              - Optional finished: finished should be true or false\n *              - Optional imgs : Imgs should be an array of strings 'images 64base\n */\n\n/**\n * @swagger\n * /barters/{id}:\n *   delete:\n *     tags:\n *       - Barters\n *     summary: Delete a barter\n *     produces:\n *       - application/json\n *     parameters:\n *       - name: id\n *         in: path\n *         required: true\n *         type: string\n *     responses:\n *       204:\n *         description: Successed. No Content\n *       404:\n *         description: Barter Not Found\n*/\nrouter.route('/:id')\n    .get(BarterController.findById)\n    .put(BarterController.updateBarter)\n    .delete(BarterController.deleteBarter);\n\n\nrouter.use(barterOfferRoute)\n\nexport default router;\n"]}